[data-ext="json"] [role="treeitem"][aria-selected="true"]:focus {
  box-shadow: inset 2px 0px 0px 0px var(--item-selected-border-color);
}

[data-ext="json"] [role="treeitem"][aria-expanded="false"]>.h>.s {
  transform: rotate(90deg);
  margin-left: 1rem;
}

[data-ext="json"] .root-item[role="treeitem"] {
  padding-left: 0;
}

[data-ext="json"] .root-item>[role="group"]>[role="treeitem"] {
  padding: .75rem;
}

[data-ext="json"] :not(.root-item)[role="treeitem"]>[role="group"] {
  border-left: 1px dashed var(--gray-800);
}

/* Experiment */
/* [data-ext="json"] .h:hover + [role="group"] {
  border-left: 1px dashed var(--indigo-400);
}
[data-ext="json"] [role="treeitem"] + [role="treeitem"]:hover > [role="group"] {
  border-left: 1px dashed var(--indigo-400);
} */

/* May use Core.blank as default with min 1 instead */
[data-ext="json"] [data-group="keyed"] {
  min-height: 1.5rem;
}

/* [data-ext="json"] [data-group="keyed"]:before {
  content: "{";
  color: var(--gray-500);
} */
/* [data-ext="json"] [data-group="keyed"]:after {
  content: "}";
  color: var(--gray-500);
} */
/* [data-ext="json"] [data-group="indexed"]:before {
  content: "[";
  color: var(--gray-700);
} */
[data-ext="json"] [data-group="indexed"]:after {
  content: "]";
  color: var(--indigo-400);
}

[data-ext="json"] [role="treeitem"] {
  padding: .1rem 0 .1rem 1.5rem;
  margin: 1px 0;
}

[data-ext="json"] [data-group="keyed"]>[role="treeitem"].leaf {
  display: grid;
  grid-template-columns: fit-content(40%) 2ch 1fr;
}


[data-ext="json"] .k {
  max-width: unset;
}

[data-ext="json"] .s {
  font-family: var(--font-mono);
  color: var(--indigo-400);
}

[data-ext="json"] .t.obj {
  --val-color: var(--gray-600);
}

[data-ext="json"] .t.arr {
  --val-color: var(--gray-600);
}


/* [data-ext="json"] .t.str:before { content: "\""; color: var(--blue-500); } */
[data-ext="json"] .t.str {
  --val-color: var(--indigo-400);
  letter-spacing: 0.25px;
}

/* [data-ext="json"] .t.str:after { content: "\""; color: var(--blue-500); } */
[data-ext="json"] .t.num {
  --val-color: var(--indigo-400);
}

[data-ext="json"] .t.bool {
  --val-color: var(--yellow-500);
}

[data-ext="json"] .t.nil {
  --val-color: var(--pink-400);
}

[data-ext="json"] .t {
  display: inline-flex;
  max-width: unset;
  flex-grow: unset;
  margin-right: unset;
  color: var(--val-color, darkorange);

  /* Overflow scroll add more 5 seconds painting time */
  /* overflow: scroll; */
}

[data-ext="json"] .t textarea {
  margin: 0;
  padding: 0;
  text-align: left;
}
